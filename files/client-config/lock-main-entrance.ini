{% include 'inc/common.ini' %}

# /* PN532 Module */
#
[module.pn532]
type = "PN532"
path = "ttyS2:pn532"
io_export.pn532led1 = { port = "p30", limit_direction = "OUTPUT" }
io_export.pn532led2 = { port = "p31", limit_direction = "OUTPUT" }
io_export.pn532led3 = { port = "p32", limit_direction = "OUTPUT" }
io_export.pn532led4 = { port = "p33", limit_direction = "OUTPUT" }
io_export.pn532out  = { port = "p71", limit_direction = "OUTPUT", active_low = false }
io_export.pn532in   = { port = "p72", limit_direction = "INPUT", active_low = false }

rfid_enabled = true
rfid_event = "open_solenoid"

[module.ui_pn532]
type = "UILed4"
led1 = "pn532led1"
led2 = "pn532led2"
led3 = "pn532led3"
led4 = "pn532led4"
solenoid = "s1"
rfid = "pn532"

[module.s1]
type = "Solenoid"
time_wait = "5"
io_output = "solenoid"
cancel_event = "cancel_open_solenoid"
cancel_open_solenoid_delay = "1.5"

[module.b0]
type = "Button"
io_input = "led1"
event = "open_solenoid"

[module.hbwvoordeurlogic]
type = "HbwVoordeurLogic"
wait_io_setup_seconds = 0.1
io_dagslotschootdetectie = "button_j4"
io_nachtslotschootdetectie = "button_j2"
io_ui_nachtslotschootnotificatie_open = "led3"
io_ui_nachtslotschootnotificatie_close = "led4"
io_ui_deuropenknopbacklight = "buzzer"
solenoid_name = "s1"
enable_cancelopensolenoid_on_dooropened = true
event_cancel_open_solenoid = "cancel_open_solenoid"

#
# /* beaglebone black with new GPIOD module */
#
[module.gpiod]
type = "GPIOD"
# https://github.com/wie-niet/doorlockd-PCB-BBB#connected-io-ports
# This enables pullups just in case, but that needs a DT fix, see
# https://openbeagle.org/beagleboard/BeagleBoard-DeviceTrees/-/merge_requests/71
io_export.button_j4  = { port = "gpiochip0 27", limit_direction = "INPUT", bias="PULL_UP", active_low=true } # button1, intercom, j4
io_export.button_j2  = { port = "gpiochip2 1", limit_direction = "INPUT", bias="PULL_UP", active_low=true, debounce_us=1000 }  # button2, buzzer, j2
io_export.solenoid = { port = "gpiochip1 28", limit_direction = "OUTPUT", active_low = false}
io_export.buzzer   = { port = "gpiochip2 5", limit_direction = "OUTPUT", active_low = false }
# This led pin is repurposed as a button input by enabling an internal pullup
io_export.led1     = { port = "gpiochip1 18", bias="PULL_UP", active_low=true, debounce_us=100 } # led1, j1
io_export.led2     = { port = "gpiochip1 19" } # led2, j3
# led3/4 is duoled
io_export.led3     = { port = "gpiochip0 23", limit_direction = "OUTPUT" } # duoled, j10-1, r
io_export.led4     = { port = "gpiochip0 22", limit_direction = "OUTPUT" } # duoled, j10-3, g
